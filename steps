- `Create Listing: Users should be able to visit a page to create a new listing.` 
- `They should be able to specify a title for the listing, a text-based description, and what the starting bid should be. `
- `Users should also optionally be able to provide a URL for an image for the listing and/or a category (e.g. Fashion, Toys, Electronics, Home, etc.).`
- `créer le modèle des listings.`
- `faire l'enregistrement du form dans la bdd.`
- `Active Listings Page: The default route of your web application should let users view all of the currently active auction listings. For each active listing, this page should display (at minimum) the title, description, current price, and photo (if one exists for the listing).`
    - `passer à la vue les infos des listings`
    - `les intégrer au index.html.`
`Listing Page: Clicking on a listing should take users to a page specific to that listing. On that page, users should be able to view all details about the listing, including the current price for the listing.`
    - `transformer en lien les listing de index`
    - `créer une url, une vue pour chaque listing`
    - `passer les infos du listing à la vue`
    - `tests unitaires : entrée d'une liste, bdd les enregistre bien et un id est créé.`
    `If the user is signed in, the user should be able to add the item to their “Watchlist.” If the item is already on the watchlist, the user should be able to remove it.`
        - `add link watchlist to listing page`
        - `ajouter un champ à la classe model pour savoir si l'user la suit, champ booléen initialement sur faux`
        - `view : register when click`
        - `html : le bouton change de contenu pour annuler ou non watchlist suivant le statut`
        - `modifier la vue pour ça`
        - `pass to watchlist html all listings of a given user`
        - `full the watchlist html with the listings of the user.`
        - `ajouter le bouton watchlist que si loggé.`
    `If the user is signed in, the user should be able to bid on the item. The bid must be at least as large as the starting bid, and must be greater than any other bids that have been placed (if any). If the bid doesn’t meet those criteria, the user should be presented with an error.`
        - `créer une url pour le bid`
        - `créer le modèle pour les bid (prix, doit être associée à un listing donné Foreignkey?)`
        - `ajouter un bid lors de l'enregistrement du listing.`
        - `créer la vue associée en enregistrant le bid`
        - `passer le nb de bids effectués au listing.html`
        - `ne pas oublier de présenter une erreur à passer à la vue si les critères non respectés`
        - `tester l'enregistrement des bids dans la bdd`
        - `changer le prix dans la vue de listing au fur et à mesure de son augmentation.`
    `If the user is signed in and is the one who created the listing, the user should have the ability to “close” the auction from this page, which makes the highest bidder the winner of the auction and makes the listing no longer active.`
        - `passer l'info du user à la page et l'info du créateur du listing (passer juste l'info de l'égalité entre les deux users)`
        - `ajouter un bouton close sous condition que les deux users sont les mêmes `
        - `bug le bouton n'apparaît pas dans ma page quand je run server`
        - `créer une vue et éventuellement une url pour la "suppression" du listing.`
        - `ajouter à l'info d'un listing dans models une case winner`
        - `view : le winner n'est rempli qu'à la fermeture`
        - `passer le winner au html` 
        - `dans l'html, ne charger le contenu classique que s'il n'y a pas de winner.` 
    `If a user is signed in on a closed listing page, and the user has won that auction, the page should say so.`
    `Users who are signed in should be able to add comments to the listing page. The listing page should display all comments that have been made on the listing.`
        - `bid ajouter au model l'user qui fait le bid.`
        - `passer à la view listing l'info du user qui regarde`
        - `passer au listing l'info du user qui a créé le listing`
        - `Il faudra ptet mettre le user dans les url?et changer le followed en une liste de ceux qui suivent.`
        - `test unitaire : login et bid d'un autre user et on vérifie que le bidder n'est pas le même.`
        - `test unitaire : deux utilisateurs ajoutent une même listing et sont tous deux des followers.`
        - `form au html pour ajouter comments`
        - `models : class comments`
        - `créer url et une vue pour enregistrer les comments`
        - `réinitialiser la bdd`
        - `passer les comments à listing`
        - `les afficher dans le html`
        - `test vérifier le bon enregistrement.`
        - `ajouter bdd une date heure de comment et les afficher du plus récent au plus ancien (trier à l'aide de leurs id)`
        - `css des commentaires.`
`Watchlist: Users who are signed in should be able to visit a Watchlist page, which should display all of the listings that a user has added to their watchlist. Clicking on any of those listings should take the user to that listing’s page.`
    - `create url, template, view for watchlist`
    - `add a button to go to watchlist of a login user redirecting to the watchlist`
- `Categories: Users should be able to visit a page that displays a list of all listing categories. Clicking on the name of any category should take the user to a page that displays all of the active listings in that category.`
    - `créer une page listant les catégories`
    - `passer à la vue toutes les catégories.`
    - `créer l'html associé`
    - `créer une url à variable catégorie renvoyant la liste de tous les listings associés.`
    - `écrire la vue qui passe les listings associés`
    - `créer l'html associé`
- `modifs`
    - `enlever de index les listings qui ne sont plus actifs.`
    - `create listing devrait redireiger vers la listing qu'on a créée.`
- `Django Admin Interface: Via the Django admin interface, a site administrator should be able to view, add, edit, and delete any listings, comments, and bids made on the site.`
    `voir comment avoir accès aux bdd en tant qu'admin et agir dessus, voir video edx sur le sujet`
- `bug à comprendre : j'ai créé des listings avec marine en superuser mais la bouton close auction n'apparait pas quand je me log avec le compte de marine`

-` enlever le bid initial du créateur car ce n'est pas un bid.`
- `dans le listing.html, il faudra passer du coup le prix du listing au départ puis le prix du bid`
- `également changer les conditions sur le bid number.`

- `CSS todo : Be creative on my CSS`
    - `mettre le prix des listings ailleurs car la fermeture de l'enchère y sera positionnée ou alors faire une deuxième barre de soumission avec les forms juste avant les descriptions.`
    - `bug quand je soumets bid ça a l'air de jouer sur close auction.`
    - `description, et texte ne doivent pas prendre plus de 50% de la place`
    - `css des catégories, faire des boutons sympas`
    - `responsive à améliorer`
    - `bug dans category les liens a sont impactés par le css`
- `voir si des vues requièrent le loginrequired`

- `si pas de catégory, ne pas créer de catégorie associée`

# Idées de + : 

- `ajouter à chaque listing, l'utilisateur qui les publie`
- `afficher sur la page d'un listing le nb de bids déposes.`